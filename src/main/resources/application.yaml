spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DB_JDBC_URL}
    hikari:
      connection-test-query: select 1
      maximum-pool-size: 4
  jooq:
    sql-dialect: postgres
  sql:
    init:
      platform: postgres
  kafka:
    bootstrap-servers: ${KAFKA_BROKERS}
    properties:
      security.protocol: SSL
      ssl:
        keystore:
          type: PKCS12
          location: ${KAFKA_KEYSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
        truststore:
          location: ${KAFKA_TRUSTSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
    consumer:
      group-id: tiltak-datadeling-dev
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
  application:
    name: tiltak-datadeling
  main:
    banner-mode: "off"
  graphql:
    path: '/graphql'
    graphiql:
      enabled: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${AZURE_OPENID_CONFIG_ISSUER}
          jwk-set-uri: ${AZURE_OPENID_CONFIG_JWKS_URI}
          audiences: ${AZURE_APP_CLIENT_ID}
management:
  endpoints:
    web:
      base-path: /internal/
      exposure:
        include: info, health, metrics, prometheus

tiltak-datadeling:
  kafka:
    topic: arbeidsgiver.tiltak-avtale-hendelse-compact
logging:
  level:
    org:
      jooq:
        no-tips: true
